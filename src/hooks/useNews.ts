// src/hooks/useNews.ts
import {
  useInfiniteQuery,
  InfiniteData,
  UseInfiniteQueryOptions,
  QueryFunctionContext,
} from '@tanstack/react-query';

import { fetchNews, NewsResponse } from '../api/newsApi';
import { useUIStore } from '../stores/uiStore';

type NewsQueryKey = readonly ['news', string];

const generateCategoryIcon = (category: string): string => {
  const canvas = document.createElement('canvas');
  canvas.width = 16;
  canvas.height = 16;
  const ctx = canvas.getContext('2d')!;

  // –¶–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  const colors: Record<string, string> = {
    business: '#3498db',
    technology: '#2ecc71',
    sports: '#e74c3c',
    entertainment: '#9b59b6',
    health: '#1abc9c',
    science: '#f39c12',
    general: '#95a5a6',
  };

  // –†–∏—Å—É–µ–º —Ñ–æ–Ω
  ctx.fillStyle = colors[category] || '#7f8c8d';
  ctx.fillRect(0, 0, 16, 16);

  // –†–∏—Å—É–µ–º —Å–∏–º–≤–æ–ª –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  ctx.fillStyle = '#fff';
  ctx.font = 'bold 10px Arial';
  ctx.textAlign = 'center';
  ctx.textBaseline = 'middle';

  const symbols: Record<string, string> = {
    business: '$',
    technology: '‚öô',
    sports: '‚öΩ',
    entertainment: 'üé¨',
    health: '‚ù§',
    science: 'üî¨',
    general: 'üì∞',
  };

  ctx.fillText(symbols[category] || 'N', 8, 8);

  return canvas.toDataURL();
};

// –§–µ–π–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è fallback
// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ñ–µ–π–∫–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
const generateFakeNews = (category: string, count: number): NewsResponse => {
  const iconUrl = generateCategoryIcon(category);

  const categoryTitles: Record<string, string> = {
    business: '–ù–æ–≤–æ—Å—Ç–∏ –±–∏–Ω–µ—Å–∞',
    technology: '–ù–æ–≤–æ—Å—Ç–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
    sports: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏',
    entertainment: '–ù–æ–≤–æ—Å—Ç–∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π',
    health: '–ù–æ–≤–æ—Å—Ç–∏ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è',
    science: '–ù–æ–≤–æ—Å—Ç–∏ –Ω–∞—É–∫–∏',
    general: '–ì–ª–∞–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏',
  };

  return {
    status: 'ok',
    totalResults: count * 3, // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    articles: Array(count)
      .fill(null)
      .map((_, i) => ({
        source: {
          id: null,
          name: `${categoryTitles[category] || 'News'} Source`,
        },
        author: `–§–µ–π–∫–æ–≤—ã–π ${category} –∞–≤—Ç–æ—Ä ${i + 1}`,
        title: `${categoryTitles[category] || '–Ω–æ–≤–æ—Å—Ç–∏'} –ó–∞–≥–æ–ª–æ–≤–æ–∫ ${i + 1}: ${fakePhrases[Math.floor(Math.random() * fakePhrases.length)]}`,
        description: `–≠—Ç–æ —Ñ–µ–π–∫–æ–≤—ã–µ ${category} –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ ${fakeTopics[Math.floor(Math.random() * fakeTopics.length)]}.`,
        url: `https://fake-news-api.com/${category}/${i + 1}`,
        urlToImage: i % 3 === 0 ? null : iconUrl, // 33% –Ω–æ–≤–æ—Å—Ç–µ–π –±–µ–∑ –∏–∫–æ–Ω–∫–∏
        publishedAt: new Date(
          Date.now() - Math.random() * 7 * 24 * 60 * 60 * 1000,
        ).toISOString(),
        content: `–§–µ–π–∫–æ–≤–æ–µ ${category} —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏. ${Array(3)
          .fill(null)
          .map(
            () => fakeContent[Math.floor(Math.random() * fakeContent.length)],
          )
          .join(' ')}`,
      })),
  };
};

// –§—Ä–∞–∑—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
const fakePhrases = [
  '–°–µ–Ω—Å–∞—Ü–∏–æ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏',
  '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π —Ä–µ–ø–æ—Ä—Ç–∞–∂',
  '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
  '–®–æ–∫–∏—Ä—É—é—â–µ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ',
  '–ê–Ω–∞–ª–∏–∑ –æ—Ç—Ä–∞—Å–ª–∏',
];

const fakeTopics = [
  '—Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –Ω–∞ —Ä—ã–Ω–∫–µ',
  '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
  '—Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è',
  '–Ω–æ–≤–æ—Å—Ç–∏ –æ –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç—è—Ö',
  '–º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –ø—Ä–æ—Ä—ã–≤—ã',
];

const fakeContent = [
  '–°–∏—Ç—É–∞—Ü–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è.',
  '–≠–∫—Å–ø–µ—Ä—Ç—ã —Ä–∞—Å—Ö–æ–¥—è—Ç—Å—è –≤–æ –º–Ω–µ–Ω–∏—è—Ö –ø–æ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É.',
  '–≠—Ç–æ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–æ–±—ã—Ç–∏–π –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –¥–∞–ª–µ–∫–æ –∏–¥—É—â–∏–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è.',
  '–í–ª–∞—Å—Ç–∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥—è—Ç –∑–∞ —Å–∏—Ç—É–∞—Ü–∏–µ–π.',
  '–ü–æ –º–µ—Ä–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –±—É–¥—É—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.',
];

export const useNews = () => {
  const selectedCategory = useUIStore((state) => state.selectedCategory);

  const queryFn = async (
    context: QueryFunctionContext<NewsQueryKey, number>,
  ): Promise<NewsResponse> => {
    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ —Å–µ—Ç–∏
      await new Promise((resolve) =>
        setTimeout(resolve, 500 + Math.random() * 500),
      );

      const realData = await fetchNews(
        selectedCategory,
        context.pageParam ?? 1,
      );
      return realData;
    } catch (error) {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      console.warn(
        `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ–µ–π–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö ${selectedCategory} –∫–∞—Ç–æ–≥–æ—Ä–∏–∏`,
      );
      return generateFakeNews(selectedCategory, 10);
    }
  };

  const queryOptions: UseInfiniteQueryOptions<
    NewsResponse,
    Error,
    InfiniteData<NewsResponse>,
    NewsResponse,
    NewsQueryKey,
    number
  > = {
    queryKey: ['news', selectedCategory] as const,
    queryFn,
    getNextPageParam: (lastPage, allPages) => {
      const totalLoaded = allPages.reduce(
        (total, page) => total + page.articles.length,
        0,
      );
      return totalLoaded < lastPage.totalResults
        ? allPages.length + 1
        : undefined;
    },
    staleTime: 1000, //1000 * 60 * 5, // 5 minutes
    placeholderData: (previous) => previous,
    initialPageParam: 1,
    retry: 1,
  };

  return useInfiniteQuery(queryOptions);
};

export type NewsQueryData = InfiniteData<NewsResponse>;
